#contact .container {
  width: 100%;
  background-color: #fafafa;
  margin: 1em 0;
  padding: 0;

  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-align-items: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

#contact .col {
  -webkit-order: 0;
  -ms-flex-order: 0;
  order: 0;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;

  padding: 50px;
  width: 50%;
}

#contact .contact-message {
  background-color: #f3f3f3;
  margin-right: 1em;
  /* padding: 80px 40px; */
}

#contact h3,
#contact h4 {
  margin-top: 0;
  line-height: 1.2;
}

form {
  width: 80%;
  height: 100%;
  border-radius: 20px;
  background: transparent;
  padding: 0;
  margin: 0 auto;
  /* padding: 40px 40px; */
}

form .button {
  float: right;
}
/**
* Make the field a flex-container, reverse the order so label is on top.
*/

.field {
  width: 100;
  display: flex;
  flex-flow: column-reverse;
  margin-bottom: 1em;
  text-align: left;
}
/**
* Add a transition to the label and input.
* I'm not even sure that touch-action: manipulation works on
* inputs, but hey, it's new and cool and could remove the 
* pesky delay.
*/
label,
input,
textarea {
  transition: all 0.2s;
  touch-action: manipulation;
}

input,
textarea {
  font-size: 1em;
  font-family: inherit;
  -webkit-appearance: none;
  padding: 20px;
  cursor: text;

  line-height: 24px;
  border-radius: 4px;

  color: #697285;

  height: 58px;
  border-radius: 3px;
  background: #fafafa;
  border: 1px solid #919191;
}

input {
  height: 54px;
}

textarea {
  height: 200px;
}
textarea:focus,
input:focus {
  outline: 0;
  border-bottom: 1px solid #55576e;
}

label {
  letter-spacing: 0.05em;
  font-weight: 500;
  font-size: 1em;
  line-height: 24px;
  text-align: left;
  color: inherit;
  opacity: 0.8;
}
/**
* Translate down and scale the label up to cover the placeholder,
* when following an input (with placeholder-shown support).
* Also make sure the label is only on one row, at max 2/3rds of the
* fieldâ€”to make sure it scales properly and doesn't wrap.
*/
textarea:placeholder-shown + label,
input:placeholder-shown + label {
  cursor: text;
  max-width: 66.66%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  transform-origin: left bottom;
  transform: translate(2rem, 2.5rem) scale(1.1);
}
/**
* By default, the placeholder should be transparent. Also, it should 
* inherit the transition.
*/
::-webkit-input-placeholder {
  opacity: 0;
  transition: inherit;
}
/**
* Show the placeholder when the input is focused.
*/
textarea:focus::-webkit-input-placeholder,
input:focus::-webkit-input-placeholder {
  opacity: 1;
}
/**
* When the element is focused, remove the label transform.
* Also, do this when the placeholder is _not_ shown, i.e. when 
* there's something in the input at all.
*/
textarea:not(:placeholder-shown) + label,
input:not(:placeholder-shown) + label,
input:focus + label,
textarea:focus + label {
  transform: translate(0, 0) scale(1);
  cursor: pointer;
}

@media (max-width: 900px) {
  #contact .container {
    flex-direction: column;
  }

  #contact .col {
    width: 100%;
    text-align: center;
    padding: 50px 1em;
  }
  #contact .col hr,
  #contact .col p {
    margin: 0 auto;
    margin-bottom: 50px;
  }

  #contact .col .button {
    float: none;
    width: 100%;
  }
}
